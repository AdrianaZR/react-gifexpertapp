{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mNAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMjB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aAwB/BZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,mCC9BjBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEKI,MAAMF,GAFX,cAEbG,EAFa,gBAGEA,EAAUC,OAHZ,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAG1Ca,QAAQC,IAAIR,GAZO,kBAaZA,GAbY,4CAAH,sDCDXS,EAAc,SAAC,GAAkB,IAAjBL,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEhC,OADAa,QAAQC,IAAKJ,EAAOV,GAEhB,sBAAKgB,UAAY,yCAAjB,UACI,qBAAKC,IAAOjB,EAAKkB,IAAOR,IACxB,4BAAIA,QCFHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAU,WAEN1B,EAAQC,GACH0B,MAAK,SAAAC,GAEFH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAItB,CAACtB,IAEGuB,EDRwBK,CAAc5B,GAAjCa,EAVuB,EAU5BN,KAAae,EAVe,EAUfA,QAGpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAY,YAAjB,SAEYL,EAAOJ,KAAK,SAAAC,GAAG,OAEf,aADI,CACH,EAAD,eAEIA,GADGA,EAAIC,aEkBpBkB,EAxCa,WAAM,MAGM/C,mBAAS,CAAC,UAHhB,mBAGvBgD,EAHuB,KAGXjD,EAHW,KAY9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAGA,6BAEQiD,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCtBlC+B,IAASC,OACL,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.8c81ce9d.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n           setCategories(cats => [inputValue,...cats]);\r\n           setinputValue('');\r\n        }\r\n        // console.log('Submit hecho');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <input\r\n                type='text'\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n};","\r\n\r\n\r\n    export const getGifs = async(category) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=uAnQEJ7aPAaUfPYnoo5DvzPb55S0mp9r`;\r\n        const respuesta = await fetch(url);\r\n        const {data} = await respuesta.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title:img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        console.log(gifs);\r\n        return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n    console.log( title, url);\r\n    return (\r\n        <div className = \"card animate__animated animate__shakeX\">\r\n            <img src = {url} alt = {title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    // const [count, setCount] = useState(0);\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then( setImages );\r\n    // }, [category]);\r\n\r\n    const {data:images, loading} = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className = \"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            // <li key = {id}>{title}</li>\r\n                        <GifGridItem \r\n                        key = {img.id} \r\n                        {...img} />\r\n                        ))\r\n                    }\r\n                {/* { <button onClick= { () => setCount(count + 1)}> </button> } */}\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state; //{data: [], loading: true};\r\n}","import React, {useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n// import PropTypes from 'prop-types'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Sabrina', 'Gilmore Girls', 'Friends'];\r\n    const [categories, setCategories] = useState(['HIMYM']);    \r\n\r\n    \r\n    // const handleAdd = () => {\r\n    //     // setCategories( [...categories, 'HIMYM'] );\r\n\r\n    //     setCategories(cats => ['HIMYM', ...categories]);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr/>  \r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key= {category}\r\n                            category= {category}\r\n                        />\r\n                    // <li key={category} > {category} </li>\r\n                    )\r\n                }\r\n            </ol>\r\n        \r\n\r\n        </>\r\n    );\r\n};\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n};\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp/>,\n     document.getElementById('root')\n);\n\n"],"sourceRoot":""}